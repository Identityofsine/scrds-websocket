{
  "nodes": {
    "@shared/packets": {
      "name": "@shared/packets",
      "type": "lib",
      "data": {
        "root": "packages/@shared/packets",
        "projectType": "library",
        "targets": {
          "typecheck": {
            "dependsOn": [
              "build",
              "^typecheck"
            ],
            "options": {
              "cwd": "packages/@shared/packets",
              "command": "tsc --build --emitDeclarationOnly"
            },
            "cache": true,
            "inputs": [
              "production",
              "^production",
              {
                "externalDependencies": [
                  "typescript"
                ]
              }
            ],
            "outputs": [
              "{projectRoot}/**/*.js",
              "{projectRoot}/**/*.cjs",
              "{projectRoot}/**/*.mjs",
              "{projectRoot}/**/*.jsx",
              "{projectRoot}/**/*.js.map",
              "{projectRoot}/**/*.jsx.map",
              "{projectRoot}/**/*.d.ts",
              "{projectRoot}/**/*.d.cts",
              "{projectRoot}/**/*.d.mts",
              "{projectRoot}/**/*.d.ts.map",
              "{projectRoot}/**/*.d.cts.map",
              "{projectRoot}/**/*.d.mts.map",
              "{projectRoot}/tsconfig.tsbuildinfo",
              "{projectRoot}/dist/**/*.d.ts",
              "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
              "{projectRoot}/out-tsc/jest/**/*.d.ts",
              "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
            ],
            "syncGenerators": [
              "@nx/js:typescript-sync"
            ],
            "metadata": {
              "technologies": [
                "typescript"
              ],
              "description": "Runs type-checking for the project.",
              "help": {
                "command": "npx tsc --build --help",
                "example": {
                  "args": [
                    "--force"
                  ]
                }
              }
            },
            "executor": "nx:run-commands",
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "dependsOn": [
              "^build"
            ],
            "options": {
              "cwd": "packages/@shared/packets",
              "command": "tsc --build tsconfig.lib.json"
            },
            "cache": true,
            "inputs": [
              "production",
              "^production",
              {
                "externalDependencies": [
                  "typescript"
                ]
              }
            ],
            "outputs": [
              "{projectRoot}/dist"
            ],
            "syncGenerators": [
              "@nx/js:typescript-sync"
            ],
            "metadata": {
              "technologies": [
                "typescript"
              ],
              "description": "Builds the project with `tsc`.",
              "help": {
                "command": "npx tsc --build --help",
                "example": {
                  "args": [
                    "--force"
                  ]
                }
              }
            },
            "executor": "nx:run-commands",
            "configurations": {},
            "parallelism": true
          },
          "build-deps": {
            "dependsOn": [
              "^build"
            ],
            "configurations": {},
            "options": {},
            "parallelism": true,
            "executor": "nx:noop"
          },
          "watch-deps": {
            "continuous": true,
            "dependsOn": [
              "build-deps"
            ],
            "executor": "nx:run-commands",
            "options": {
              "command": "npx nx watch --projects @shared/packets --includeDependentProjects -- npx nx build-deps @shared/packets"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "cache": true,
            "options": {
              "cwd": "packages/@shared/packets",
              "command": "eslint ."
            },
            "inputs": [
              "default",
              "^default",
              "{workspaceRoot}/eslint.config.mjs",
              "{workspaceRoot}/packages/@shared/packets/eslint.config.mjs",
              "{workspaceRoot}/tools/eslint-rules/**/*",
              {
                "externalDependencies": [
                  "eslint"
                ]
              }
            ],
            "outputs": [
              "{options.outputFile}"
            ],
            "metadata": {
              "technologies": [
                "eslint"
              ],
              "description": "Runs ESLint on project",
              "help": {
                "command": "npx eslint --help",
                "example": {
                  "options": {
                    "max-warnings": 0
                  }
                }
              }
            },
            "executor": "nx:run-commands",
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "options": {
              "cwd": "packages/@shared/packets",
              "env": {
                "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
              },
              "command": "jest"
            },
            "metadata": {
              "technologies": [
                "jest"
              ],
              "description": "Run Jest Tests",
              "help": {
                "command": "npx jest --help",
                "example": {
                  "options": {
                    "coverage": true
                  }
                }
              }
            },
            "cache": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js",
              {
                "externalDependencies": [
                  "jest"
                ]
              }
            ],
            "outputs": [
              "{projectRoot}/test-output/jest/coverage"
            ],
            "executor": "nx:run-commands",
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ]
          }
        },
        "name": "@shared/packets",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {},
          "js": {
            "packageName": "@shared/packets",
            "packageExports": {
              "./package.json": "./package.json",
              ".": {
                "development": "./src/index.ts",
                "types": "./dist/index.d.ts",
                "import": "./dist/index.js",
                "default": "./dist/index.js"
              }
            },
            "packageMain": "./dist/index.js",
            "isInPackageManagerWorkspaces": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@shared/utils": {
      "name": "@shared/utils",
      "type": "lib",
      "data": {
        "root": "packages/@shared/utils",
        "projectType": "library",
        "targets": {
          "typecheck": {
            "dependsOn": [
              "build",
              "^typecheck"
            ],
            "options": {
              "cwd": "packages/@shared/utils",
              "command": "tsc --build --emitDeclarationOnly"
            },
            "cache": true,
            "inputs": [
              "production",
              "^production",
              {
                "externalDependencies": [
                  "typescript"
                ]
              }
            ],
            "outputs": [
              "{projectRoot}/**/*.js",
              "{projectRoot}/**/*.cjs",
              "{projectRoot}/**/*.mjs",
              "{projectRoot}/**/*.jsx",
              "{projectRoot}/**/*.js.map",
              "{projectRoot}/**/*.jsx.map",
              "{projectRoot}/**/*.d.ts",
              "{projectRoot}/**/*.d.cts",
              "{projectRoot}/**/*.d.mts",
              "{projectRoot}/**/*.d.ts.map",
              "{projectRoot}/**/*.d.cts.map",
              "{projectRoot}/**/*.d.mts.map",
              "{projectRoot}/tsconfig.tsbuildinfo",
              "{projectRoot}/dist/**/*.d.ts",
              "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
              "{projectRoot}/out-tsc/jest/**/*.d.ts",
              "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
            ],
            "syncGenerators": [
              "@nx/js:typescript-sync"
            ],
            "metadata": {
              "technologies": [
                "typescript"
              ],
              "description": "Runs type-checking for the project.",
              "help": {
                "command": "npx tsc --build --help",
                "example": {
                  "args": [
                    "--force"
                  ]
                }
              }
            },
            "executor": "nx:run-commands",
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "dependsOn": [
              "^build"
            ],
            "options": {
              "cwd": "packages/@shared/utils",
              "command": "tsc --build tsconfig.lib.json"
            },
            "cache": true,
            "inputs": [
              "production",
              "^production",
              {
                "externalDependencies": [
                  "typescript"
                ]
              }
            ],
            "outputs": [
              "{projectRoot}/dist"
            ],
            "syncGenerators": [
              "@nx/js:typescript-sync"
            ],
            "metadata": {
              "technologies": [
                "typescript"
              ],
              "description": "Builds the project with `tsc`.",
              "help": {
                "command": "npx tsc --build --help",
                "example": {
                  "args": [
                    "--force"
                  ]
                }
              }
            },
            "executor": "nx:run-commands",
            "configurations": {},
            "parallelism": true
          },
          "build-deps": {
            "dependsOn": [
              "^build"
            ],
            "configurations": {},
            "options": {},
            "parallelism": true,
            "executor": "nx:noop"
          },
          "watch-deps": {
            "continuous": true,
            "dependsOn": [
              "build-deps"
            ],
            "executor": "nx:run-commands",
            "options": {
              "command": "npx nx watch --projects @shared/utils --includeDependentProjects -- npx nx build-deps @shared/utils"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "cache": true,
            "options": {
              "cwd": "packages/@shared/utils",
              "command": "eslint ."
            },
            "inputs": [
              "default",
              "^default",
              "{workspaceRoot}/eslint.config.mjs",
              "{workspaceRoot}/packages/@shared/utils/eslint.config.mjs",
              "{workspaceRoot}/tools/eslint-rules/**/*",
              {
                "externalDependencies": [
                  "eslint"
                ]
              }
            ],
            "outputs": [
              "{options.outputFile}"
            ],
            "metadata": {
              "technologies": [
                "eslint"
              ],
              "description": "Runs ESLint on project",
              "help": {
                "command": "npx eslint --help",
                "example": {
                  "options": {
                    "max-warnings": 0
                  }
                }
              }
            },
            "executor": "nx:run-commands",
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "options": {
              "cwd": "packages/@shared/utils",
              "env": {
                "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
              },
              "command": "jest"
            },
            "metadata": {
              "technologies": [
                "jest"
              ],
              "description": "Run Jest Tests",
              "help": {
                "command": "npx jest --help",
                "example": {
                  "options": {
                    "coverage": true
                  }
                }
              }
            },
            "cache": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js",
              {
                "externalDependencies": [
                  "jest"
                ]
              }
            ],
            "outputs": [
              "{projectRoot}/test-output/jest/coverage"
            ],
            "executor": "nx:run-commands",
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ]
          }
        },
        "name": "@shared/utils",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {},
          "js": {
            "packageName": "@shared/utils",
            "packageExports": {
              "./package.json": "./package.json",
              ".": {
                "development": "./src/index.ts",
                "types": "./dist/index.d.ts",
                "import": "./dist/index.js",
                "default": "./dist/index.js"
              }
            },
            "packageMain": "./dist/index.js",
            "isInPackageManagerWorkspaces": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@srcds-socket/app": {
      "name": "@srcds-socket/app",
      "type": "lib",
      "data": {
        "root": "app",
        "projectType": "library",
        "targets": {
          "typecheck": {
            "dependsOn": [
              "^typecheck"
            ],
            "options": {
              "cwd": "app",
              "command": "tsc --build --emitDeclarationOnly"
            },
            "cache": true,
            "inputs": [
              "production",
              "^production",
              {
                "externalDependencies": [
                  "typescript"
                ]
              }
            ],
            "outputs": [
              "{projectRoot}/**/*.js",
              "{projectRoot}/**/*.cjs",
              "{projectRoot}/**/*.mjs",
              "{projectRoot}/**/*.jsx",
              "{projectRoot}/**/*.js.map",
              "{projectRoot}/**/*.jsx.map",
              "{projectRoot}/**/*.d.ts",
              "{projectRoot}/**/*.d.cts",
              "{projectRoot}/**/*.d.mts",
              "{projectRoot}/**/*.d.ts.map",
              "{projectRoot}/**/*.d.cts.map",
              "{projectRoot}/**/*.d.mts.map",
              "{projectRoot}/tsconfig.tsbuildinfo",
              "{projectRoot}/dist/**/*.d.ts",
              "{projectRoot}/dist/tsconfig.app.tsbuildinfo"
            ],
            "syncGenerators": [
              "@nx/js:typescript-sync"
            ],
            "metadata": {
              "technologies": [
                "typescript"
              ],
              "description": "Runs type-checking for the project.",
              "help": {
                "command": "npx tsc --build --help",
                "example": {
                  "args": [
                    "--force"
                  ]
                }
              }
            },
            "executor": "nx:run-commands",
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "cache": true,
            "options": {
              "cwd": "app",
              "command": "eslint ."
            },
            "inputs": [
              "default",
              "^default",
              "{workspaceRoot}/eslint.config.mjs",
              "{workspaceRoot}/tools/eslint-rules/**/*",
              {
                "externalDependencies": [
                  "eslint"
                ]
              }
            ],
            "outputs": [
              "{options.outputFile}"
            ],
            "metadata": {
              "technologies": [
                "eslint"
              ],
              "description": "Runs ESLint on project",
              "help": {
                "command": "npx eslint --help",
                "example": {
                  "options": {
                    "max-warnings": 0
                  }
                }
              }
            },
            "executor": "nx:run-commands",
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "@nx/esbuild:esbuild",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "platform": "node",
              "outputPath": "app/dist",
              "format": [
                "cjs"
              ],
              "bundle": false,
              "main": "app/src/main.ts",
              "tsConfig": "app/tsconfig.app.json",
              "assets": [
                "app/src/assets"
              ],
              "esbuildOptions": {
                "sourcemap": true,
                "outExtension": {
                  ".js": ".js"
                }
              }
            },
            "configurations": {
              "development": {},
              "production": {
                "esbuildOptions": {
                  "sourcemap": false,
                  "outExtension": {
                    ".js": ".js"
                  }
                }
              }
            },
            "parallelism": true,
            "cache": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "prune-lockfile": {
            "dependsOn": [
              "build"
            ],
            "cache": true,
            "executor": "@nx/js:prune-lockfile",
            "outputs": [
              "{workspaceRoot}/app/dist/package.json",
              "{workspaceRoot}/app/dist/package-lock.json"
            ],
            "options": {
              "buildTarget": "build"
            },
            "configurations": {},
            "parallelism": true
          },
          "copy-workspace-modules": {
            "dependsOn": [
              "build"
            ],
            "cache": true,
            "outputs": [
              "{workspaceRoot}/app/dist/workspace_modules"
            ],
            "executor": "@nx/js:copy-workspace-modules",
            "options": {
              "buildTarget": "build"
            },
            "configurations": {},
            "parallelism": true
          },
          "prune": {
            "dependsOn": [
              "prune-lockfile",
              "copy-workspace-modules"
            ],
            "executor": "nx:noop",
            "configurations": {},
            "options": {},
            "parallelism": true
          },
          "serve": {
            "continuous": true,
            "executor": "@nx/js:node",
            "defaultConfiguration": "development",
            "dependsOn": [
              "build"
            ],
            "options": {
              "buildTarget": "@srcds-socket/app:build",
              "runBuildTargetDependencies": false
            },
            "configurations": {
              "development": {
                "buildTarget": "@srcds-socket/app:build:development"
              },
              "production": {
                "buildTarget": "@srcds-socket/app:build:production"
              }
            },
            "parallelism": true
          }
        },
        "name": "@srcds-socket/app",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {},
          "js": {
            "packageName": "@srcds-socket/app",
            "isInPackageManagerWorkspaces": true
          }
        },
        "implicitDependencies": []
      }
    }
  },
  "externalNodes": {},
  "dependencies": {
    "@shared/packets": [],
    "@shared/utils": [],
    "@srcds-socket/app": []
  },
  "version": "6.0",
  "errors": [],
  "computedAt": 1755728808722
}